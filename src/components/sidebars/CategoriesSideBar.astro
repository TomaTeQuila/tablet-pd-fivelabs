---
export interface Props {
  selectedCategory?: string;
}

import { penal_codes } from '../../data/penalcode';

// Obtener categorías únicas directamente de los datos, asegurándose de incluir "Todos"
const uniqueCategories = [...new Set(penal_codes.map(code => code.category).filter((cat): cat is string => typeof cat === 'string' && !!cat))];
const categories = ["Todos", ...uniqueCategories.sort()];

const { selectedCategory = "Todos" } = Astro.props;

// Contar cuántos códigos hay por categoría
const categoryCounts = categories.reduce((acc, cat) => {
  if (cat === "Todos") {
    acc[cat] = penal_codes.length;
  } else {
    acc[cat] = penal_codes.filter(code => code.category === cat).length;
  }
  return acc;
}, {} as Record<string, number>)

/* Full hecho por IA esta wea xd */
---

<div class="categories-sidebar">
  <div class="categories-header">
    <span class="material-symbols-rounded">category</span>
    <h3>Categorías</h3>
  </div>
  
  <div class="categories-list">
    {categories.map((category) => (
      <button 
        class={`category-item ${category === selectedCategory ? 'active' : ''}`}
        data-category={category}
      >
        <span class="category-name">{category}</span>
        <span class="category-count">
          {categoryCounts[String(category)] ?? 0}
        </span>
      </button>
    ))}
  </div>
  
  <div class="categories-footer">
    <button class="clear-filter">
      <span class="material-symbols-rounded">clear_all</span>
      Limpiar filtros
    </button>
  </div>
</div>

<style>
  .categories-sidebar {
    background: var(--bg-secondary);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 16px;
    width: 220px;
    height: fit-content;
    max-height: 400px;
    display: flex;
    flex-direction: column;
    gap: 16px;
  }

  .categories-header {
    display: flex;
    align-items: center;
    gap: 8px;
    padding-bottom: 8px;
    border-bottom: 1px solid var(--border-color);
  }

  .categories-header span {
    color: var(--accent-blue);
    font-size: 1.2rem;
  }

  .categories-header h3 {
    color: var(--text-primary);
    font-size: 1rem;
    font-weight: 500;
    margin: 0;
  }

  .categories-list {
    display: flex;
    flex-direction: column;
    gap: 4px;
    overflow-y: auto;
    flex: 1;
  }

  .category-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 12px;
    background: transparent;
    border: 1px solid transparent;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s ease;
    color: var(--text-secondary);
    font-size: 0.9rem;
  }

  .category-item:hover {
    background: var(--bg-tertiary);
    border-color: var(--border-light);
    color: var(--text-primary);
  }

  .category-item.active {
    background: var(--accent-blue);
    border-color: var(--accent-blue);
    color: white;
  }

  .category-item.active .category-count {
    background: rgba(255, 255, 255, 0.2);
    color: white;
  }

  .category-name {
    font-weight: 400;
  }

  .category-count {
    background: var(--bg-tertiary);
    color: var(--text-tertiary);
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 600;
    min-width: 20px;
    text-align: center;
  }

  .categories-footer {
    padding-top: 8px;
    border-top: 1px solid var(--border-color);
  }

  .clear-filter {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 8px 12px;
    background: transparent;
    border: 1px solid var(--border-color);
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s ease;
    color: var(--text-tertiary);
    font-size: 0.85rem;
    width: 100%;
    justify-content: center;
  }

  .clear-filter:hover {
    background: var(--bg-tertiary);
    border-color: var(--border-light);
    color: var(--text-primary);
  }

  .clear-filter span {
    font-size: 1rem;
  }
  /* Scrollbar para la lista de categorías */
  .categories-list::-webkit-scrollbar {
    width: 4px;
  }
  .categories-list::-webkit-scrollbar-track {
    background: transparent;
  }
  .categories-list::-webkit-scrollbar-thumb {
    background-color: var(--border-color);
    border-radius: 2px;
  }
  .categories-list::-webkit-scrollbar-thumb:hover {
    background-color: var(--border-light);
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('.category-item');
    const clearButton = document.querySelector('.clear-filter');
    
    buttons.forEach(button => {
        button.addEventListener('click', () => {
            const category = button.getAttribute('data-category');
            
            // Remover clase activa de todos los botones
            buttons.forEach(btn => btn.classList.remove('active'));
            
            // Agregar clase activa al botón clickeado
            button.classList.add('active');
            
            // Emitir el evento personalizado
            document.dispatchEvent(new CustomEvent('categoryChange', {
                detail: { category: category }
            }));
        });
    });
    
    // Manejar el botón de limpiar filtros
    if (clearButton) {
        clearButton.addEventListener('click', () => {
            // Remover clase activa de todos los botones
            buttons.forEach(btn => btn.classList.remove('active'));
            
            // Activar el botón "Todos"
            const todosButton = document.querySelector('[data-category="Todos"]');
            if (todosButton) {
                todosButton.classList.add('active');
            }
            
            // Emitir evento para mostrar todos
            document.dispatchEvent(new CustomEvent('categoryChange', {
                detail: { category: 'Todos' }
            }));
            
            // También limpiar el input de búsqueda
            const searchInput = document.getElementById('searchInput') as HTMLInputElement;
            if (searchInput) {
                searchInput.value = '';
                searchInput.dispatchEvent(new Event('input'));
            }
        });
    }
});
</script>